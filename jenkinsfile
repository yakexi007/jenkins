pipeline {
    agent any
    // environment {
    //     BITBUCKET_COMMON_CREDS = credentials('test')
    // }
    stages {
        stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters([
                            choice(
                                choices: ['master', 'dev'], 
                                name: 'PARAMETER_01'
                            ),
                            booleanParam(
                                defaultValue: true, 
                                description: '', 
                                name: 'BOOLEAN'
                            ),
                            text(
                                defaultValue: '''
                                this is a multi-line 
                                string parameter example
                                ''', 
                                 name: 'MULTI-LINE-STRING'
                            ),
                            string(
                                defaultValue: 'scriptcrunch', 
                                name: 'STRING-PARAMETER', 
                                trim: true
                            )
                        ])
                    ])
                }
            }
        }
        stage("checkout") {
            steps{
            // checkout from github
            // git url: 'git@github.com:yakexi007/jenkins.git', branch: "${params.PARAMETER_01}"
            git branch: "${params.PARAMETER_01}", credentialsId: '7f06f377-9e27-4b5c-ba86-40c4f93d7914', url: 'git@github.com:yakexi007/jenkins.git'
            }
        }
        stage("build") {
            steps{
                // echo "I said, Hello Mr. ${BITBUCKET_COMMON_CREDS_USR}"
                // echo "${BITBUCKET_COMMON_CREDS_PSW}"
                echo "${params.PARAMETER_01} World!" 
                echo ""
            }
        } // end stage
        stage("test") {
            steps{
                echo "${env.BUILD_ID}"
            }
        } // end stage
        stage("deploy") {
            steps{
                echo "${env.JENKINS_URL}"
            }
        }
        stage("input") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                script {
                    env.DEPLOY_ENV = input message: '选择部署的环境', ok: 'deploy',
                        parameters: [choice(name: 'DEPLOY_ENV', choices: ['prd', 'uat', 'dev'], description: '选择部署环境')]

                        switch("${env.DEPLOY_ENV}"){
                            case 'prd':
                                println('deploy prd env')
                                break;

                            case 'uat':
                                println('deploy uat env')
                                break;

                            case 'dev':
                                println('deploy dev env')
                                break;
                            
                            default:
                                println('error env')

                        }
                    }
                }
            }
        }
        stage('Example Build') {
            agent { docker 'maven:3-alpine' } 
            steps {
                echo 'Hello, Maven'
                sh 'mvn --version'
            }
        }
    } // end stages
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
    }
}